import math

# my option using previous max function

def find_max_sum_of_subarrays(K, arr):
  result = []
  windowSum, windowStart = 0.0, 0
  for windowEnd in range(len(arr)):
    windowSum += arr[windowEnd]  # add the next element
    # slide the window, we don't need to slide if we've not hit the required window size of 'k'
    if windowEnd >= K - 1:
      result.append(windowSum)  # calculate the average
      windowSum -= arr[windowStart]  # subtract the element going out
      windowStart += 1  # slide the window ahead

  return max(result)

def find_smallest_subarray_sum(s, arr):
  for sub_length in range(len(arr)):
    max_sum = find_max_sum_of_subarrays(sub_length+1, arr)
    # print("max sum: {}, for length: {}".format(max_sum, sub_length+1))
    if max_sum >= s:
      return sub_length+1
  return 0


# better option
def smallest_subarray_sum(s, arr):
  min_length = math.inf
  window_sum = 0
  window_start = 0
  for window_end in range(0, len(arr)):
    window_sum += arr[window_end] # add next element
    # srhink the window as small as possile until the 'window_sum' is smaller than 's'
    while window_sum >= s:
      min_length = min(min_length, window_end - window_start + 1)
      window_sum -= arr[window_start]
      window_start += 1

  if min_length == math.inf:
    return 0
  return min_length



def main():
#  my option
  result = find_smallest_subarray_sum(7, [2, 1, 5, 2, 3, 2])
  print("Smallest sub: " + str(result))

  result = find_smallest_subarray_sum(8, [3, 4, 1, 1, 6])
  print("Smallest sub: " + str(result))

  result = find_smallest_subarray_sum(8, [2, 1, 5, 2, 3, 2])
  print("Smallest sub: " + str(result))

  result = find_smallest_subarray_sum(20, [3, 4, 1, 1, 6])
  print("Smallest sub: " + str(result))

# better option
  print('\n\n\nBetter Option')

  print("Smallest subarray length: " + str(smallest_subarray_sum(7, [2, 1, 5, 2, 3, 2])))
  print("Smallest subarray length: " + str(smallest_subarray_sum(8, [3, 4, 1, 1, 6])))
  print("Smallest subarray length: " + str(smallest_subarray_sum(8, [2, 1, 5, 2, 3, 2])))
  print("Smallest subarray length: " + str(smallest_subarray_sum(20, [2, 1, 5, 2, 3, 2])))

main()


