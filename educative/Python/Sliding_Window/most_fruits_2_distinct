def longest_substring_with_k_distinct(str1, k):
  window_start = 0
  max_length = 0
  fruit_frequency = {}

  for window_end in range(len(str1)):
    right_char = str1[window_end]
    if right_char not in fruit_frequency:
      fruit_frequency[right_char] = 0
    fruit_frequency[right_char] += 1

    while len (fruit_frequency) > k:
      left_char = str1[window_start]
      fruit_frequency[left_char] -= 1
      if fruit_frequency[left_char] == 0:
        del fruit_frequency[left_char]
      window_start += 1

    max_length = max(max_length, window_end-window_start + 1)
  return max_length

def main():

  result = longest_substring_with_k_distinct('abcac', 2)
  print( "longest sub string with no more then k distinct characters: " + str(result))

  result = longest_substring_with_k_distinct('abcbbc', 2)
  print( "longest sub string with no more then k distinct characters: " + str(result))

  result = longest_substring_with_k_distinct('aaabb', 2)
  print( "longest sub string with no more then k distinct characters: " + str(result))


main()